name: PROJECT_NAME CI/CD Pipeline

# There's is specific logic connected to the trigger events by exclusion: 
# (github.event_name != 'pull_request')
# When adding new events, make sure they conform to the logic
# or if needed, make appropriate changes to keep the logic consistent
on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    runs-on: windows-latest
    outputs:
      new_version: ${{ steps.tag_generator.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 50

      # (github.event_name == 'push') is used for steps specifically involved in the Release Sequence
      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Bump release version and create release tag
        id: tag_generator
        uses: mathieudutour/github-tag-action@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

      - name: Build project

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Upload artifact
        id: up_package_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifact
          path: artifact/

  cd:
    # "This job will execute when the workflow is triggered on a 'push event', the target branch is 'master' and the commit is intended to be a release."
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && needs.ci.outputs.new_version != ''
    needs: ci
    runs-on: windows-latest
    env:
      NEW_VERSION: ${{ needs.ci.outputs.new_version }}
      NEW_TAG: v${{ needs.ci.outputs.new_version }}
    steps:
      - name: Checkout repository
        id: checkout_repo
        uses: actions/checkout@v2

      - name: Download and extract artifact
        id: dl_artifact
        uses: actions/download-artifact@v2
        with:
          name: Artifact
          path: artifact/

      - name: Publish *.nupkg on NuGet
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        continue-on-error: true
        with:
             PROJECT_FILE_PATH: 'project.csproj'
             TAG_COMMIT: true
             NUGET_KEY: ${{secrets.NUGET_TOKEN}}
             PACKAGE_NAME: Project.${{ env.NEW_VERSION }}.nupkg

      - name: Create and publish release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}

      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifact/
          asset_name: artifact.zip
          asset_content_type: application/zip

# Built with ‚ù§ by [Pipeline Foundation](https://pipeline.foundation)